// Generated by CoffeeScript 1.6.2
(function() {
  var Background, Twitter, exports, _ref;

  Background = (function() {
    Background.prototype.commands = {
      'twitter': null
    };

    function Background(twitter) {
      this.twitter = twitter;
      this.commands.twitter = this.twitter;
      this.addEventListeners();
    }

    Background.prototype.addEventListeners = function() {
      var _this = this;

      chrome.extension.onRequest.addListener(function(message, sender, sendResponse) {
        var args, res, target;

        target = _this.commands[message.target];
        if (!target) {
          throw new Error("Invalid target " + message.target);
        }
        args = message.args;
        args.push(sendResponse);
        res = target[message.action].apply(target, args);
        if (res) {
          sendResponse({
            res: res
          });
        }
        return target = null;
      });
    };

    return Background;

  })();

  Twitter = (function() {
    Twitter.prototype.oauth = null;

    function Twitter() {}

    Twitter.prototype.authorize = function(callback) {
      console.log('Run authorizing.');
      this.oauth = ChromeExOAuth.initBackgroundPage({
        request_url: 'https://api.twitter.com/oauth/request_token',
        authorize_url: 'https://api.twitter.com/oauth/authorize',
        access_url: 'https://api.twitter.com/oauth/access_token',
        consumer_key: 'I7GcKlS4hnVloq9vLyvfQ',
        consumer_secret: 'N0eoeNkSufsKsnpywjKZsZeK6DrqA7Jhr7kW6I',
        scope: 'https://api.twitter.com/1.1/',
        app_name: 'vimmers_folow_status'
      });
      this.oauth.authorize(this.onAuthorized(callback));
      callback = null;
    };

    Twitter.prototype.onAuthorized = function(callback) {
      var _this = this;

      return function() {
        console.log('Authorize successfully.');
        callback.call(_this);
        return callback = null;
      };
    };

    Twitter.prototype.sendSignedRequest = function(url, request, sendResponse) {
      var _this = this;

      this.authorize(function() {
        console.log('Call onAuthoried callback', url, request);
        _this.oauth.sendSignedRequest(url, _this.onSendSignedRequest(sendResponse), request);
        url = null;
        request = null;
        sendResponse = null;
      });
    };

    Twitter.prototype.onSendSignedRequest = function(sendResponse) {
      var _this = this;

      return function(response, xhr) {
        var _ref;

        response = JSON.parse(response);
        console.log('Response of sendSignedRequest', response);
        if (((_ref = response.errors) != null ? _ref[0].code : void 0) === 89) {
          _this.removeOauthToken();
          console.log(localStorage);
          response = null;
        }
        sendResponse({
          res: response
        });
        sendResponse = null;
      };
    };

    Twitter.prototype.removeOauthToken = function() {
      console.log('Remove oath access token.');
      localStorage.removeItem('oauth_tokenhttps://api.twitter.com/1.1/');
      localStorage.removeItem('oauth_token_secrethttps://api.twitter.com/1.1/');
    };

    return Twitter;

  })();

  exports = (_ref = exports != null ? exports : window) != null ? _ref : this;

  exports.bg = new Background(new Twitter);

}).call(this);
